head(var_d)
dcc
rm(Lmarkets)
str(return)
colnames(var_d)
rcomm <- var_d[,c(13,18,20,23,19,4,17,3)]
colnames(rcomm)
rcomm$commodity <- apply(rcomm,1,mean)
rcomm$commodity
rcomm
cryp$crypto <- apply(cryp, 1, mean)
colnames(rcryp)
cryp$crypto <- apply(cryp, 1, mean)
colnames(rcryp)
colnames(rcryp)
rcryp
cryp$crypto <- apply(cryp, 1, mean)
cryp$crypto <- apply(cryp, 1, mean)
colnames(rcryp)
rcryp
cryp$crypto <- apply(cryp, 1, mean)
cryp$crypto <- apply(cryp, 1, mean)
cryp$crypto <- apply(cryp, 1, mean)
rcryp <- var_d[,c(13,18,20,23,19,4,17,3)]
rcryp
colnames(rcryp)
rcryp <- var_d[,c(9,21,25)]
colnames(rcryp)
rcryp$crypto <- apply(rcryp,1,mean)
rcryp$crypto
head(rcryp$crypto)
head(rcomm$commodity)
rcryp$crypto
requiEUR <- var_d[,c(4,6,7,8,12,14)]
colnames(requiEUR)
colnames(equiEUR)
colnames(var_d)
colnames(vari)
requiEUR <- var_d[,c(27,8,5,15,6,12,10,11,1,14,22,26,24,7,16,2)]
colnames(requiEUR)
colnames(equiEUR)
colnames(var_d)
colnames(rcryp)
colnames(rcomm)
requi <- var_d[,c(27,8,5,15,6,12,10,11,1,14,22,26,24,7,16,2)]
colnames(requi)
requiEUR <- requi[,c(4,6,7,8,12,14)]
colnames(requiEUR)
requiASI <- requi[,c(2,3,5,11,16)]
colnames(requiASI)
requiAME <- requi[,c(2,3,5,11,16)]
colnames(requiAME)
requiAME <- requi[,c(2,3,5,11,16)]
colnames(requiAME)
requiAME <- requi[,c(1,9,10,13,15)]
colnames(requiAME)
requiEUR$EUR <- apply(requiEUR,1,mean)
requiASI$asia <- apply(requiASI,1,mean)
requiAME$america <- apply(requiAME,1,mean)
Rmarkets <- bind(rcomm$commodity,requiEUR$EUR,requiASI$asia,requiAME$america,
rcryp$crypto)
Rmarkets <- cbind(rcomm$commodity,requiEUR$EUR,requiASI$asia,requiAME$america,
rcryp$crypto)
colnames(Rmarkets) <- c("Commoditymarkets","Europemarkets",
"Asianmarkets","Americanmarkets","cryptomarkets")
head(Rmarkets)
dca = ConnectednessApproach(Rmarkets,
nfore=100,
corrected=TRUE,
model="DCC-GARCH")
dcc<- as.data.frame(dca$TABLE)
dcc
dccresult <- cbind(rownames(dcc),dcc)
write_xlsx(dccresult,"dccall.xlsx")
library(writexl)
write_xlsx(dccresult,"dccall.xlsx")
plot(Rmarkets)
rMARKETS
Rmarkets
head(Rmarkets)
var_d
head(return)
library(ConnectednessApproach)
equiEUR
dca = ConnectednessApproach(Rmarkets,
nfore=100,
corrected=TRUE,
model="DCC-GARCH")
dccresult <- cbind(rownames(dcc),dcc)
dccresult
write_xlsx(dccresult,"dccall.xlsx")
PlotTCI(dca, ylim=c(0,100))
PlotNET(dca, ylim=c(-100,100))
dca = ConnectednessApproach(var_d,
nfore=100,
corrected=TRUE,
model="DCC-GARCH")
dcc<- as.data.frame(dca$TABLE)
dcc
PlotTCI(dca, ylim=c(0,100))
PlotNET(dca, ylim=c(-100,100))
PlotNetwork(dca = dca)
PlotNetwork(dca = acg2020markets)
PlotNetwork(dca = acg2020v)
PlotNetwork(dca = dca)
str(var_d)
PlotTCI(dca, ylim=c(0,100))
dca = ConnectednessApproach(vari,
nfore=100,
corrected=TRUE,
model="DCC-GARCH")
dcc<- as.data.frame(dca$TABLE)
PlotNetwork(dca = dca)
dca = ConnectednessApproach(markets,
nfore=100,
corrected=TRUE,
model="DCC-GARCH")
library(ConnectednessApproach)
dca = ConnectednessApproach(markets,
nfore=100,
corrected=TRUE,
model="DCC-GARCH")
PlotNetwork(dca = dca)
dca = ConnectednessApproach(Rmarkets,
nfore=100,
corrected=TRUE,
model="DCC-GARCH")
Rmarkets <- cbind(rcomm$commodity,requiEUR$EUR,requiASI$asia,requiAME$america,
rcryp$crypto)
rcomm$commodity <- apply(rcomm,1,mean)
rcomm <- var_d[,c(13,18,20,23,19,4,17,3)] #for DCC garch analyis
rcomm$commodity <- apply(rcomm,1,mean)
rcryp <- var_d[,c(9,21,25)]
rcryp$crypto <- apply(rcryp,1,mean)
requi <- var_d[,c(27,8,5,15,6,12,10,11,1,14,22,26,24,7,16,2)]
requiEUR <- requi[,c(4,6,7,8,12,14)]
requiEUR$EUR <- apply(requiEUR,1,mean)
requiASI <- requi[,c(2,3,5,11,16)]
requiASI$asia <- apply(requiASI,1,mean)
requiAME <- requi[,c(1,9,10,13,15)]
requiAME$america <- apply(requiAME,1,mean)
Rmarkets <- cbind(rcomm$commodity,requiEUR$EUR,requiASI$asia,requiAME$america,
rcryp$crypto)
colnames(Rmarkets) <- c("Commoditymarkets","Europemarkets",
"Asianmarkets","Americanmarkets","cryptomarkets")
head(Rmarkets)
dca = ConnectednessApproach(Rmarkets,
nfore=100,
corrected=TRUE,
model="DCC-GARCH")
PlotNetwork(dca = dca)
dca = ConnectednessApproach(var_d,
nfore=100,
corrected=TRUE,
model="DCC-GARCH")
PlotNetwork(dca = dca)
library(ConnectednessApproach)
head(var_d)
BivariateDCCGARCH(var_d)
PlotNPDC(dca = dca)
SummaryStatistics(var_d)
BivariateDCCGARCH(
dca,
spec,
copula = "mvt")
dca = ConnectednessApproach(markets,
nfore=100,
corrected=TRUE,
model="DCC-GARCH")
PlotNetwork(dca = dca)
dcc<- as.data.frame(dca$TABLE)
dcc
dca = ConnectednessApproach(Rmarkets,
nfore=100,
corrected=TRUE,
model="DCC-GARCH")
dcc<- as.data.frame(dca$TABLE)
dcc
PlotNetwork(dca = dca)
dca = ConnectednessApproach(var_d,
nfore=100,
corrected=TRUE,
model="DCC-GARCH")
PlotNetwork(dca = dca)
PlotNetwork(dca = dca)
dca1 = ConnectednessApproach(vari,
nfore=100,
corrected=TRUE,
model="DCC-GARCH")
PlotNetwork(dca = dca1)
PlotNetwork(dca = dca1)
dcc<- as.data.frame(dca1$TABLE)
dcc
PlotTCI(dca1, ylim=c(0,100))
PlotNET(dca1, ylim=c(-100,100))
PlotTO(dca1, ylim=c(0,120))
PlotFROM(dca1, ylim=c(0,120))
PlotNetwork(dca = dca1)
rm(dca1)
dca = ConnectednessApproach(varibeforewar,
nfore=100,
corrected=TRUE,
model="DCC-GARCH")
str(varibeforewar)
dca = ConnectednessApproach(varibeforewar,
nfore=10,
corrected=TRUE,
model="DCC-GARCH")
dca = ConnectednessApproach(varibeforewar,
nfore=10,window.size = 50
corrected=TRUE,
model="DCC-GARCH")
dca = ConnectednessApproach(varibeforewar,
nfore=10,window.size = 50,
corrected=TRUE,
model="DCC-GARCH")
dca = ConnectednessApproach(varibeforewar,
nfore=10,window.size = 30,
corrected=TRUE,
model="DCC-GARCH")
dca = ConnectednessApproach(varibeforewar,
nfore=10,nlag = 1,
corrected=TRUE,
model="DCC-GARCH")
dca = ConnectednessApproach(varibeforewar,
nfore=10,
corrected=TRUE,
model="DCC-GARCH")
dca = ConnectednessApproach(variaftercovid,
nfore=10,
corrected=TRUE,
model="DCC-GARCH")
dcc<- as.data.frame(dca$TABLE)
PlotNetwork(dca = dca)
PlotNetwork(dca = dca)
library(ConnectednessApproach)
str(vari)
dca = ConnectednessApproach(vari,
nfore=10,
corrected=TRUE,
model="DCC-GARCH")
PlotNetwork(dca = dca)
dcc<- as.data.frame(dca$TABLE)
dccresult <- cbind(rownames(dcc),dcc)
library(writexl)
write_xlsx(dccresult,"dccall.xlsx")
linksall <- read.csv("dccall.csv", header=T, row.names=1)
linksall <- as.matrix(linksall)
nodesall <- read.csv("nodesdccall.csv", header=T, row.names=1)
netall <- graph_from_adjacency_matrix(linksall, weighted =TRUE)
# graph for all assets ###########
library(igraph)
netall <- graph_from_adjacency_matrix(linksall, weighted =TRUE)
netall <- simplify(netall, remove.multiple = F, remove.loops = T) # remove loops
colrs <- c("tomato", "gold")
V(netall)$size <- nodesall$size
V(netall)$color <- colrs[nodesall$type]
E(netall)$width <- E(netall)$weight/10
#net$arrow.size <- E(net)$weight/2
E(netall)$arrow.size <- 0.05
E(netall)$edge.color <- "gray80"
E(netall)$width <- E(netall)$weight/10
plot(netall, vertex.label.cex=0.8,
remove.loops = T,layout=layout.circle)
colrs <- c("tomato", "gold")
V(netall)$size <- nodesall$size
V(netall)$color <- colrs[nodesall$type]
E(netall)$width <- E(netall)$weight/10
#net$arrow.size <- E(net)$weight/2
E(netall)$arrow.size <- 0.05
E(netall)$edge.color <- "gray80"
colrs <- c("tomato", "gold")
V(netall)$size <- nodesall$size
V(netall)$color <- colrs[nodesall$type]
E(netall)$width <- E(netall)$weight/10
#E(netall)$edge.color <- "gray80"
E(netall)$width <- E(netall)$weight/10
plot(netall, vertex.label.cex=0.8,
remove.loops = T,layout=layout.circle)
colrs <- c("tomato", "gold")
V(netall)$size <- nodesall$size
V(netall)$color <- colrs[nodesall$type]
E(netall)$width <- E(netall)$weight/10
#net$arrow.size <- E(net)$weight/2
#E(netall)$arrow.size <- 0.05
#E(netall)$edge.color <- "gray80"
E(netall)$width <- E(netall)$weight/10
plot(netall, vertex.label.cex=0.8,
remove.loops = T,layout=layout.circle)
netall <- graph_from_adjacency_matrix(linksall, weighted =TRUE)
netall <- simplify(netall, remove.multiple = F, remove.loops = T) # remove loops
colrs <- c("tomato", "gold")
V(netall)$size <- nodesall$size
V(netall)$color <- colrs[nodesall$type]
E(netall)$width <- E(netall)$weight/10
plot(netall, vertex.label.cex=0.8,
remove.loops = T,layout=layout.circle)
tkid <- tkplot(netall) #for fixing coordinates
V(netall)$size <- nodesall$size
V(netall)$color <- colrs[nodesall$type]
E(netall)$width <- E(netall)$weight/10
net$arrow.size <- E(net)$weight/2
#E(netall)$arrow.size <- 0.05
E(netall)$edge.color <- "gray80"
E(netall)$width <- E(netall)$weight/10
plot(netall, vertex.label.cex=0.8,
remove.loops = T,layout=layout.circle)
tkid <- tkplot(netall) #for fixing coordinates
l <- tkplot.getcoords(tkid)
#please format as csv in stata
linksall <- read.csv("spillacg2020v.csv", header=T, row.names=1)
linksall <- as.matrix(linksall)
nodesall <- read.csv("nodesall.csv", header=T, row.names=1)
netall <- graph_from_adjacency_matrix(linksall, weighted =TRUE)
netall <- simplify(netall, remove.multiple = F, remove.loops = T) # remove loops
colrs <- c("tomato", "gold")
V(netall)$size <- nodesall$size
V(netall)$color <- colrs[nodesall$type]
E(netall)$width <- E(netall)$weight/10
net$arrow.size <- E(net)$weight/2
#E(netall)$arrow.size <- 0.05
E(netall)$edge.color <- "gray80"
E(netall)$width <- E(netall)$weight/10
plot(netall, vertex.label.cex=0.8,
remove.loops = T,layout=layout.circle)
E(netall)$arrow.size <- 0.05
E(netall)$edge.color <- "gray80"
E(netall)$width <- E(netall)$weight/10
plot(netall, vertex.label.cex=0.8,
remove.loops = T,layout=layout.circle)
View(spillacg2020v)
#please format as csv in stata
linksall <- read.csv("spillacg2020v.csv", header=T, row.names=1)
linksall <- as.matrix(linksall)
nodesall <- read.csv("nodesall.csv", header=T, row.names=1)
netall <- graph_from_adjacency_matrix(linksall, weighted =TRUE)
netall <- simplify(netall, remove.multiple = F, remove.loops = T) # remove loops
colrs <- c("tomato", "gold")
V(netall)$size <- nodesall$size
V(netall)$color <- colrs[nodesall$type]
E(netall)$width <- E(netall)$weight/10
net$arrow.size <- E(net)$weight/2
E(netall)$arrow.size <- 0.05
E(netall)$edge.color <- "gray80"
E(netall)$width <- E(netall)$weight/10
plot(netall, vertex.label.cex=0.8,
remove.loops = T,layout=layout.circle)
linksall <- read.csv(dccall.csv", header=T, row.names=1)
linksall <- read.csv("dccall.csv", header=T, row.names=1)
linksall <- as.matrix(linksall)
nodesall <- read.csv("nodesdccall.csv", header=T, row.names=1)
netall <- graph_from_adjacency_matrix(linksall, weighted =TRUE)
netall <- simplify(netall, remove.multiple = F, remove.loops = T) # remove loops
colrs <- c("tomato", "gold")
V(netall)$size <- nodesall$size
V(netall)$color <- colrs[nodesall$type]
E(netall)$width <- E(netall)$weight/10
net$arrow.size <- E(net)$weight/2
E(netall)$arrow.size <- 0.05
E(netall)$edge.color <- "gray80"
E(netall)$width <- E(netall)$weight/10
plot(netall, vertex.label.cex=0.8,
remove.loops = T,layout=layout.circle)
nodesall <- read.csv("nodesdccall.csv", header=T, row.names=1)
linksall <- read.csv("dccall.csv", header=T, row.names=1)
linksall <- as.matrix(linksall)
netall <- graph_from_adjacency_matrix(linksall, weighted =TRUE)
netall <- simplify(netall, remove.multiple = F, remove.loops = T) # remove loops
colrs <- c("tomato", "gold")
V(netall)$size <- nodesall$size
V(netall)$color <- colrs[nodesall$type]
E(netall)$width <- E(netall)$weight/10
net$arrow.size <- E(net)$weight/2
E(netall)$arrow.size <- 0.05
E(netall)$edge.color <- "gray80"
E(netall)$width <- E(netall)$weight/10
plot(netall, vertex.label.cex=0.8,
remove.loops = T,layout=layout.circle)
tkid <- tkplot(netall) #for fixing coordinates
l <- tkplot.getcoords(tkid)
tk_close(tkid, window.close = T)
tiff("fig11.jpg",width = 10, height = 10, units = 'in', res = 350) #for high resolution
plot(netall, layout=l)
legend(x=-1.5, y=-1, c("Net receiver", "Net transmitter"),
pch=21, col="#777777", pt.bg=colrs, pt.cex=2, cex=1, bty="n", ncol=1)
dev.off()
date=index(Rmarkets), coredata(Rmarkets)
test <- data.frame(date=index(Rmarkets), coredata(Rmarkets))
index(Rmarkets)
library(zoo)
library(xts)
test <- data.frame(date=index(Rmarkets), coredata(Rmarkets))
View(test)
plot(test$Commoditymarkets)
test <- as.xts(date=index(Rmarkets), coredata(Rmarkets))
test <- as.xts(date=index(Rmarkets), coredata(Rmarkets), order.by = "rownames")
test <- as.zoo(date=index(Rmarkets), coredata(Rmarkets))
class(Rmarkets)
plot(Rmarkets$Commoditymarkets)
head(Rmarkets)
index(Rmarkets)
.index(Rmarkets)
test <- cbind(.index(Rmarkets),cor_oil_cryp)
library(tseries)
library(rugarch)
library(rmgarch)
library(xts)
oil <- var_d$oil
gold <- var_d$Gold
crypto<- Rmarkets$cryptomarkets
comm <- Rmarkets$Commoditymarkets
american <- Rmarkets$Americanmarkets
asian <- Rmarkets$Asianmarkets
european <- Rmarkets$Europemarkets
model1 <- ugarchspec(mean.model = list(armaOrder=c(0,0)),
variance.model = list(garchOrder=c(1,1),
model="sGARCH"),
distribution.model = "norm")
modelspec<-dccspec(uspec=multispec(replicate(2,model1)),
dccOrder=c(1,1),distribution="mvnorm")
modelfit <- dccfit(modelspec,data=data.frame(oil,crypto))
plot(modelfit)
correlation <- rcor(modelfit)
cor_oil_cryp <- correlation[2,1,]
test <- cbind(.index(Rmarkets),cor_oil_cryp)
head(test)
class(test)
test <- as.zoo(cbind(.index(Rmarkets),cor_oil_cryp))
class(test)
plot(test)
head(test)
test <- as.zoo(cbind(.index(Rmarkets),cor_oil_cryp))
test
plot(modelfit)
str(oil)
modelfit <- dccfit(modelspec,data=oil,gold)
modelfit <- dccfit(modelspec,data=cbind(oil,gold))
plot(modelfit)
correlation <- rcor(modelfit)
cor_oil_gold <- correlation[2,1,]
plot.ts(cor_oil_gold)
modelfit <- dccfit(modelspec,data=cbind(oil,european))
plot(modelfit)
str(european)
european <- Rmarkets$Europemarkets[c(380:600),]
str(european)
modelfit <- dccfit(modelspec,data=cbind(oil,european))
model1 <- ugarchspec(mean.model = list(armaOrder=c(0,0)),
variance.model = list(garchOrder=c(1,1),
model="sGARCH"),
distribution.model = "norm")
modelspec<-dccspec(uspec=multispec(replicate(2,model1)),
dccOrder=c(1,1),distribution="mvnorm")
modelfit <- dccfit(modelspec,data=cbind(oil,european))
str(comm)
european <- Rmarkets$Europemarkets[c(380:724),]
modelfit <- dccfit(modelspec,data=cbind(oil,european))
european
str(european)
oil <- var_d$oil[c(380:724,)]
str(oil)
oil <- var_d$oil[c(380:724),]
modelfit <- dccfit(modelspec,data=cbind(oil,european))
plot(modelfit)
oil <- var_d$oil
european <- Rmarkets$Europemarkets
modelfit <- dccfit(modelspec,data=cbind(oil,european))
plot(modelfit)
gold <- var_d$Gold
modelfit <- dccfit(modelspec,data=cbind(gold,european))
plot(modelfit)
modelfit <- dccfit(modelspec,data=cbind(gold,american))
plot(modelfit)
modelfit <- dccfit(modelspec,data=cbind(gold,asian))
plot(modelfit)
modelfit <- dccfit(modelspec,data=cbind(gold,crypto))
plot(modelfit)
modelfit <- dccfit(modelspec,data=cbind(oil,crypto))
plot(modelfit)
modelfit <- dccfit(modelspec,data=cbind(oil,european))
plot(modelfit)
modelfit <- dccfit(modelspec,data=cbind(oil,american))
plot(modelfit)
modelfit <- dccfit(modelspec,data=cbind(oil,asian))
plot(modelfit)
plot(netall, layout=l)
netall
plot(netall, layout=l)
library(ConnectednessApproach)
plot(netall, layout=l)
modelspec
modelfit
library(ConnectednessApproach)
modelfit <- dccfit(modelspec,data=cbind(comm,amarican))
library(zoo)
library(xts)
modelfit <- dccfit(modelspec,data=cbind(comm,amarican))
american <- Rmarkets$Americanmarkets
modelfit <- dccfit(modelspec,data=cbind(comm,amarican))
modelfit <- dccfit(modelspec,data=cbind(comm,american))
plot(modelfit)
modelfit <- dccfit(modelspec,data=cbind(comm,european))
plot(modelfit)
modelfit <- dccfit(modelspec,data=cbind(comm,asian))
plot(modelfit)
modelfit <- dccfit(modelspec,data=cbind(comm,crypto))
plot(modelfit)
commodities <- Rmarkets$Commoditymarkets
modelfit <- dccfit(modelspec,data=cbind(commodities,crypto))
plot(modelfit)
modelfit <- dccfit(modelspec,data=cbind(crypto, commodities))
plot(modelfit)
