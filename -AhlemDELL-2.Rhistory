test <- return
index(test) <- zoo(test[,1], format(as.Date(test$Date), "%y/%m/%d"))
test <- as.zoo(test)
index(test) <- zoo(test[,1], format(as.Date(test$Date), "%y/%m/%d"))
str(acg2020)
test <- zoo(test[,1], format(as.Date(test$Date), "%y/%m/%d"))
test <- zoo(test[,1], as.Date((test$Date), format= "%y/%m/%d"))
test <- zoo(test[,1], as.Date((test$Date), format= "%Y/%m/%d"))
test <- return
test <- read.zoo(return)
head(test)
head(test[,1:3])
str(test)
dcat = ConnectednessApproach(test,
nlag=4,
nfore=100,
model="VAR",
connectedness="Time",
Connectedness_config=list(TimeConnectedness=list(generalized=TRUE)))
View(dcat)
dcat[["TABLE"]]
var_d <- read.zoo(R_dataframe)
library(ConnectednessApproach)
dca = ConnectednessApproach(var_d,
nlag=1,
nfore=12,
window.size=100,
model="TVP-VAR",
connectedness="Time",
VAR_config=list(TVPVAR=list(kappa1=0.99, kappa2=0.96, prior="BayesPrior")))
gc()
library(ConnectednessApproach)
head(test[,1:3])
str(test)
str(var_d)
View(return)
View(R_dataframe)
str(acg2020)
head(acg2020[,1:3])
head(R_dataframe[,1:10])
str(R_dataframe)
var_d <- read.zoo(return)
dca = ConnectednessApproach(var_d,
nlag=1,
nfore=12,
window.size=100,
model="TVP-VAR",
connectedness="Time",
VAR_config=list(TVPVAR=list(kappa1=0.99, kappa2=0.96, prior="BayesPrior")))
str(var_d)
head(var_d[,1:3])
head(return[,1:3])
#dy2012 model
dcat = ConnectednessApproach(var_d,
nlag=4,
nfore=100,
model="VAR",
connectedness="Time",
Connectedness_config=list(TimeConnectedness=list(generalized=TRUE)))
dcat$TABLE
#dy2012 model
dy2012 = ConnectednessApproach(var_d,
nlag=4,
nfore=100,
model="VAR",
connectedness="Time",
Connectedness_config=list(TimeConnectedness=list(generalized=TRUE)))
head(acg2020)
class(acg2020)
str(acg2020)
str(var_d)
head(var_d[,1:3])
#acg2020 model
acg2020 = ConnectednessApproach(var_d,
nlag=1,
nfore=6,
window.size=50,
model="TVP-VAR",
connectedness="Time",
VAR_config=list(TVPVAR=list(kappa1=0.99, kappa2=0.96, prior="BayesPrior")))
#acg2020 model
acg2020 = ConnectednessApproach(var_d,
nlag=1,
nfore=2,
window.size=10,
model="TVP-VAR",
connectedness="Time",
VAR_config=list(TVPVAR=list(kappa1=0.99, kappa2=0.96, prior="BayesPrior")))
PlotTCI(dca, ca=DCA, ylim=c(20,80))
library(ConnectednessApproach)
install.packages(ConnectednessApproach)
library(devtools)
install_github("GabauerDavid/ConnectednessApproach")
library(ConnectednessApproach)
install_github("GabauerDavid/ConnectednessApproach")
library(devtools)
install_github("GabauerDavid/ConnectednessApproach")
library(ConnectednessApproach)
install_github("GabauerDavid/ConnectednessApproach")
library(ConnectednessApproach)
install.packages("devtools")
library(ConnectednessApproach)
########################################################
#****           Time Varying Parameter *** ###
########################################################
library(devtools)
install_github("GabauerDavid/ConnectednessApproach")
library(ConnectednessApproach)
install_github("GabauerDavid/ConnectednessApproach")
library(ConnectednessApproach)
library(ConnectednessApproach)
install_github("GabauerDavid/ConnectednessApproach")
install_github("GabauerDavid/ConnectednessApproach")
library(ConnectednessApproach)
library(devtools)
install_github("GabauerDavid/ConnectednessApproach")
library(ConnectednessApproach)
########################################################
#****           Time Varying Parameter *** ###
########################################################
library(devtools)
library(ConnectednessApproach)
library(ConnectednessApproach)
install.packages("devtools")
library(devtools)
install_github("GabauerDavid/ConnectednessApproach")
library(ConnectednessApproach)
library(devtools)
install.packages("devtools")
library(devtools)
install_github("GabauerDavid/ConnectednessApproach")
library(ConnectednessApproach)
#acg2020 model
acg2020 = ConnectednessApproach(var_d,
nlag=1,
nfore=12,
window.size=100,
model="TVP-VAR",
connectedness="Time",
VAR_config=list(TVPVAR=list(kappa1=0.99, kappa2=0.96, prior="BayesPrior")))
View(acg2020)
acg2020[["TABLE"]]
PlotTCI(acg2020, ca=DCA, ylim=c(20,80))
PlotNET(acg2020, ca=DCA, ylim=c(-20,20))
PlotNPDC(acg2020, ca=DCA, ylim=c(-20,20))
PlotNPDC(acg2020, ca=DCA)
View(acg2020)
acg2020[["TABLE"]]
library(ConnectednessApproach)
View(acg2020)
acg2020[["TABLE"]]
View(dy2012)
dy2012[["TABLE"]]
spill2012 <- dy2012$TABLE
spill2012 <- as.data.frame(dy2012$TABLE)
View(spill2012)
library(writexl)
install.packages("writexl")
library(writexl)
write_xlsx(spill2012,"spill2012.xls")
View(spill2012)
spill2012 <- cbind(rownames(spill2012),spill2012)
head(spill2012[,1:3])
write_xlsx(spill2012,"spill2012.xlsx")
dy2012
View(dy2012)
PlotTCI(acg2020, ca=DCA, ylim=c(20,80))
library(ConnectednessApproach)
PlotTCI(acg2020, ca=DCA, ylim=c(20,80))
PlotTCI(acg2020, ca=DCA, ylim=c(20,150))
PlotNET(acg2020, ca=DCA, ylim=c(-20,20))
PlotFROM(acg2020, ylim=c(0,60))
PlotFROM(acg2020, ylim=c(0,100))
PlotFROM(acg2020, ylim=c(0,110))
PlotFROM(acg2020, ylim=c(0,130))
PlotTO(acg2020, ylim=c(0,60))
PlotTO(acg2020, ylim=c(0,130))
PlotTO(acg2020, ylim=c(0,150))
PlotTO(acg2020, ylim=c(0,180))
PlotTO(acg2020, ylim=c(0,200))
PlotNET(acg2020, ylim=c(-30,30))
PlotNET(acg2020, ca=DCA, ylim=c(-20,20))
PlotNET(acg2020, ylim=c(-30,30))
PlotNPDC(acg2020, ylim=c(-20,20))
PlotNPDC(acg2020, ylim=c(-100,200))
PlotNPDC(acg2020, ylim=c(-100,200))
#PlotNPDC(acg2020, ylim=c(-10,20))
PlotPCI(acg2020)
dy2012
var_d
head(var_d[,1:3])
head(return[,1:3])
head(acg2020[,1:3])
View(acg2020)
acg2020[["TABLE"]]
spillacg2020 <- as.data.frame(acg2020$TABLE)
head(acg2020[,1:3])
head(spillacg2020[,1:3])
spillacg2020 <- cbind(rownames(spillacg2020),spillacg2020)
head(spillacg2020[,1:3])
library(writexl)
write_xlsx(spillacg2020,"spillacg2020.xlsx")
PlotTCI(acg2020, ca=DCA, ylim=c(20,150))  #the average
library(ConnectednessApproach)
PlotTCI(acg2020, ca=DCA, ylim=c(20,150))  #the average
PlotTCI(acg2020, ca=DCA, ylim=c(20,120))  #the average
PlotTCI(acg2020, ca=DCA, ylim=c(20,100))  #the average
PlotNET(acg2020, ylim=c(-20,20))
PlotNET(acg2020, ylim=c(-20,100))
PlotNET(acg2020, ylim=c(-70,100))
PlotNET(acg2020, ylim=c(-100,100))
head(datana)
head(data)
View(envt1)
envt1[["000001.SS"]]
#---------------------------------------------------------
#             Variance measure             #####
vola <- do.call(merge, eapply(envt1, h))
#---------------------------------------------------------
#             Variance measure             #####
vola <- do.call(merge, eapply(envt1, cl))
?getsymbols
library(quantmod)
?getsymbols
?Getsymbols
#---------------------------------------------------------
#             Variance measure             #####
vola <- do.call(merge, eapply(envt1, o))
#---------------------------------------------------------
#             Variance measure             #####
vola <- do.call(merge, eapply(envt1, O))
#---------------------------------------------------------
#             Variance measure             #####
vola <- do.call(merge, eapply(envt1, l))
#---------------------------------------------------------
#             Variance measure             #####
vola <- do.call(merge, eapply(envt1, L))
#---------------------------------------------------------
#             Variance measure             #####
vola <- do.call(merge, eapply(envt1, op))
envt1[1]
View(envt1)
envt1[[".getSymbols"]]
envt1[["000001.SS"]]
#---------------------------------------------------------
#             Variance measure             #####
vola <- do.call(merge, eapply(envt1, Lo))
View(vola)
#---------------------------------------------------------
#             Variance measure             #####
lowp <- do.call(merge, eapply(envt1, Lo))
hip <- do.call(merge, eapply(envt1, Hi))
head(var_d[,1:3])
head(vari[,1:3])
View(vari)
library(quantmod)
View(vari)
head(vari[,1:3])
library(quantmod)
head(acg2020)
head(return[,1:3])
head(vari[,1:3])
vari <- cbind(rownames(vari),vari)
head(vari[,1:3])
View(vari)
vari <- 0.361*(log(hip)-log(lowp))^2
vari <- na.omit(vari)
head(vari[,1:3])
vari <- cbind(rownames(vari),vari)
head(vari[,1:3])
class(vari)
head(vari[,1:3])
head(acg2020[,1:3])
head(var_d[,1:3])
class(var_d)
library(ConnectednessApproach)
acg2020v = ConnectednessApproach(vari,
nlag=1,
nfore=12,
window.size=100,
model="TVP-VAR",
connectedness="Time",
VAR_config=list(TVPVAR=list(kappa1=0.99, kappa2=0.96, prior="BayesPrior")))
vari <- as.zoo(vari)
class(vari)
acg2020v = ConnectednessApproach(vari,
nlag=1,
nfore=12,
window.size=100,
model="TVP-VAR",
connectedness="Time",
VAR_config=list(TVPVAR=list(kappa1=0.99, kappa2=0.96, prior="BayesPrior")))
View(acg2020v)
acg2020v[["TABLE"]]
spillacg2020v <- as.data.frame(acg2020v$TABLE)
spillacg2020v <- cbind(rownames(spillacg2020v),spillacg2020v)
library(writexl)
write_xlsx(spillacg2020v,"spillacg2020v.xlsx")
head(spillacg2020v[,1:3])
colnames(spillacg2020v) <- c("Brasil","Indonesia","NaturalGas","Soybean","Japan",
"India","Turkey","China","Bitcoin",
"france","Italy","UK","oil","Canada",
"Germany","Agentina","corn","Aluminium",
"Wheat","Gold","Ethereum","Southkorea","Sugar","Mexico",
"Tehther","Russia","US")
vari
head(vari[,1:3])
str(vari)
colnames(vari) <- c("Brasil","Indonesia","NaturalGas","Soybean","Japan",
"India","Turkey","China","Bitcoin",
"france","Italy","UK","oil","Canada",
"Germany","Agentina","corn","Aluminium",
"Wheat","Gold","Ethereum","Southkorea","Sugar","Mexico",
"Tehther","Russia","US")
acg2020v = ConnectednessApproach(vari,
nlag=1,
nfore=12,
window.size=100,
model="TVP-VAR",
connectedness="Time",
VAR_config=list(TVPVAR=list(kappa1=0.99, kappa2=0.96, prior="BayesPrior")))
spillacg2020v <- as.data.frame(acg2020v$TABLE)
head(spillacg2020v[,1:3])
write_xlsx(spillacg2020v,"spillacg2020v.xlsx")
spillacg2020v <- cbind(rownames(spillacg2020v),spillacg2020v)
write_xlsx(spillacg2020v,"spillacg2020v.xlsx")
PlotNET(acg2020v, ylim=c(-100,100))
PlotNET(acg2020v, ylim=c(-100,150))
PlotNET(acg2020v, ylim=c(-100,250))
# Dynamic Total Connectedness
PlotTCI(acg2020v, ca=DCA, ylim=c(20,100))
# Dynamic Total Connectedness
PlotTCI(acg2020v, ca=DCA, ylim=c(-20,100))
# Dynamic Total Connectedness
PlotTCI(acg2020v, ca=DCA, ylim=c(20,300))
# Dynamic Total Connectedness
PlotTCI(acg2020v, ca=DCA, ylim=c(20,200))
# Dynamic Total Connectedness
PlotTCI(acg2020v, ca=DCA, ylim=c(20,150))
# Dynamic Total Connectedness
PlotTCI(acg2020v, ca=DCA, ylim=c(20,180))
# Dynamic Total Connectedness
PlotTCI(acg2020v, ca=DCA, ylim=c(20,120))
# Dynamic Total Connectedness
PlotTCI(acg2020v, ylim=c(20,120))
PlotFROM(acg2020v, ylim=c(0,130))
# Directional Volatility Spillovers, TO
PlotTO(acg2020v, ylim=c(0,200))
# Directional Volatility Spillovers, TO
PlotTO(acg2020v, ylim=c(0,250))
# Directional Volatility Spillovers, TO
PlotTO(acg2020v, ylim=c(0,200))
# Directional Volatility Spillovers, TO
PlotTO(acg2020v, ylim=c(0,300))
library(quantmod)
library(xts)
library(zoo)
str(datana)
str(R_dataframe)
library(fBasics)
desc <- do.call(data.frame,
list(mean = apply(R_dataframe, 2, mean),
sd = apply(R_dataframe, 2, sd),
median = apply(R_dataframe, 2, median),
min = apply(R_dataframe, 2, min),
max = apply(R_dataframe, 2, max),
skew = apply(R_dataframe, 2, sampleSKEW),
kurt = apply(R_dataframe,2,sampleKURT)))
str(desc)
View(desc)
desc <- cbind(rownames(desc),desc)
library(writexl)
write_xlsx(desc,"descstatistics.xlsx")
#********normality test************####
normalTest(R_dataframe$Brasil,method="jb")
#********normality test************####
normalTest(R_dataframe$Indonesia,method="jb")
#********normality test************####
normalTest(R_dataframe$NaturalGas,method="jb")
#********normality test************####
normalTest(R_dataframe$Soybean,method="jb")
#********normality test************####
normalTest(R_dataframe$Japan,method="jb")
#********normality test************####
normalTest(R_dataframe$India,method="jb")
#********normality test************####
normalTest(R_dataframe$Turkey,method="jb")
#********normality test************####
normalTest(R_dataframe$China,method="jb")
#********normality test************####
normalTest(R_dataframe$Bitcoin,method="jb")
#********normality test************####
normalTest(R_dataframe$france,method="jb")
#********normality test************####
normalTest(R_dataframe$Italy,method="jb")
#********normality test************####
normalTest(R_dataframe$UK,method="jb")
#********normality test************####
normalTest(R_dataframe$oil,method="jb")
#********normality test************####
normalTest(R_dataframe$Canada,method="jb")
#********normality test************####
normalTest(R_dataframe$Germany,method="jb")
#********normality test************####
normalTest(R_dataframe$Agentina,method="jb")
#********normality test************####
normalTest(R_dataframe$corn,method="jb")
#********normality test************####
normalTest(R_dataframe$Aluminium,method="jb")
#********normality test************####
normalTest(R_dataframe$Wheat,method="jb")
#********normality test************####
normalTest(R_dataframe$Gold,method="jb")
#********normality test************####
normalTest(R_dataframe$Ethereum,method="jb")
#********normality test************####
normalTest(R_dataframe$Southkorea,method="jb")
#********normality test************####
normalTest(R_dataframe$Sugar,method="jb")
#********normality test************####
normalTest(R_dataframe$Mexico,method="jb")
#********normality test************####
normalTest(R_dataframe$Tehther,method="jb")
#********normality test************####
normalTest(R_dataframe$Russia,method="jb")
#********normality test************####
normalTest(R_dataframe$US,method="jb")
View(acg2020)
acg2020[["CT"]]
library(ConnectednessApproach)
fit = VAR(vari, configuration=list(nlag=1))
fevd = FEVD(Phi=fit$B, Sigma=fit$Q, nfore=10, type="time", generalized=TRUE)$FEVD
CT = ConnectednessTable(fevd)
View(CT)
CT[["TABLE"]]
head(CT[,1:3])
head(CT$FEVD[,1:3])
head(CT$TABLE[,1:3])
#Net Total and Net Pairwise Directional Connectedness Measures
PlotNET(acg2020v, ylim=c(-100,250))
head(acg2020v$TABLE[,1:3])
head(vari[,1:3])
prior = BayesPrior(vari, nlag=1)
colnames(vari)
#-------------variequity--------------------
variequity <- vari[,c(27,8,5,15,6,12,10,11,1,14,22,26,24,7,16,2)]
colnames(variequity)
library(ConnectednessApproach)
acg2020equity = ConnectednessApproach(variequity,
nlag=1,
nfore=12,
window.size=100,
model="TVP-VAR",
connectedness="Time",
VAR_config=list(TVPVAR=list(kappa1=0.99, kappa2=0.96, prior="BayesPrior")))
library(zoo)
acg2020equity = ConnectednessApproach(variequity,
nlag=1,
nfore=12,
window.size=100,
model="TVP-VAR",
connectedness="Time",
VAR_config=list(TVPVAR=list(kappa1=0.99, kappa2=0.96, prior="BayesPrior")))
variequity
class(variequity)
class(varicomm)
class(varicomm)
#------------vari for commodity--------------
varicomm <- vari[,c(13,18,20,23,19,4,17,3)]
class(varicomm)
#-------------variequity--------------------
variequity <- vari[,c(27,8,5,15,6,12,10,11,1,14,22,26,24,7,16,2)]
class(variequity)
acg2020equity = ConnectednessApproach(variequity,
nlag=1,
nfore=12,
window.size=100,
model="TVP-VAR",
connectedness="Time",
VAR_config=list(TVPVAR=list(kappa1=0.99, kappa2=0.96, prior="BayesPrior")))
spillacg2020equity <- as.data.frame(acg2020equity$TABLE)
spillacg2020equity <- cbind(rownames(spillacg2020equity),spillacg2020equity)
write_xlsx(spillacg2020equity,"spillacg2020equity.xlsx")
library(writexl)
write_xlsx(spillacg2020equity,"spillacg2020equity.xlsx")
colnames(vari)
varicryp <- vari[,c(9,21,25)]
acg2020cryp = ConnectednessApproach(varicryp,
nlag=1,
nfore=12,
window.size=100,
model="TVP-VAR",
connectedness="Time",
VAR_config=list(TVPVAR=list(kappa1=0.99, kappa2=0.96, prior="BayesPrior")))
spillacg2020cryp <- as.data.frame(acg2020cryp$TABLE)
spillacg2020cryp <- cbind(rownames(spillacg2020cryp),spillacg2020cryp)
write_xlsx(spillacg2020cryp,"spillacg2020cryp.xlsx")
library(ConnectednessApproach)
library(zoo)
acg2020comm = ConnectednessApproach(varicomm,
nlag=1,
nfore=12,
window.size=100,
model="TVP-VAR",
connectedness="Time",
VAR_config=list(TVPVAR=list(kappa1=0.99, kappa2=0.96, prior="BayesPrior")))
#Net Total and Net Pairwise Directional Connectedness Measures
PlotNET(acg2020comm,ca=acg2020comm, ylim=c(-100,250))
# Dynamic Total Connectedness
PlotTCI(acg2020comm,ca=acg2020comm, ylim=c(10,100))
View(acg2020comm)
acg2020comm[["TCI"]]
